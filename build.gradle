buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile(
       'org.springframework.boot:spring-boot-starter',
       'org.springframework.boot:spring-boot-starter-jersey',
       'org.codehaus.groovy:groovy-json:2.4.12',

       // eclipse paho for M2M (MQTT)
	   'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0'
	)
	compile('org.codehaus.groovy:groovy',
            'org.springframework.boot:spring-boot-devtools'
    )
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

allprojects {
    apply plugin: 'idea'
    idea {
        module {
            outputDir file('build/classes/main')
            testOutputDir file('build/classes/test')
        }
    }
    if(project.convention.findPlugin(JavaPluginConvention)) {
        // Change the output directory for the main and test source sets back to the old path
        sourceSets.main.output.classesDir = new File(buildDir, "classes/main")
        sourceSets.test.output.classesDir = new File(buildDir, "classes/test")
    }
}